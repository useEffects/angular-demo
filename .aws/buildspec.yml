version: 0.2

env:
  variables:
    S3_BUCKET: "locality-ui"

phases:
  install:
    commands:
      - echo "Updating package lists and installing Node.js..."
      - curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
      - apt-get install -y nodejs
      - echo "Installing dependencies..."
      - npm i -g npm
      - npm install -g aws-cli
      - npm install
  build:
    commands:
      - echo "Building the Angular project..."
      - npm run build
      - echo "Determining environment folder..."
      - ENV_FOLDER=""
      - if [[ "$ENV_NAME" == "dev" ]]; then ENV_FOLDER="DEV/"; fi
      - echo "Using folder $ENV_FOLDER"
      - echo "Syncing the entire dist folder to S3..."
      - aws s3 sync dist s3://$S3_BUCKET/$ENV_FOLDER --delete
  post_build:
    commands:
      - echo "Generating and deploying Lambda@Edge function..."
      - npx --yes envsub assets/env.example.js env.js
      - |
        cat <<EOF > lambda-edge.js
        'use strict';
        exports.handler = async (event) => {
            return {
                status: '200',
                statusDescription: 'OK',
                headers: {
                    'content-type': [{ key: 'Content-Type', value: 'application/javascript' }],
                    'cache-control': [{ key: 'Cache-Control', value: 'public, max-age=31536000, immutable' }]
                },
                body: \`$(cat env.js)\`
            };
        };
        EOF
      - zip lambda-edge.zip lambda-edge.js
      - |
        FUNCTION_NAME="EnvLambdaEdgeFunction"
        ROLE_ARN="$ROLE_ARN"
        aws lambda create-function --function-name $FUNCTION_NAME \
          --runtime nodejs18.x \
          --role $ROLE_ARN \
          --handler lambda-edge.handler \
          --zip-file fileb://lambda-edge.zip || true
      - aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://lambda-edge.zip
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"

artifacts:
  files:
    - "**/*"
